orbs:
  # The Node.js orb contains a set of prepackaged CircleCI configuration you can utilize
  # Orbs reduce the amount of configuration required for common tasks. 
  # See the orb documentation here: https://circleci.com/developer/orbs/orb/circleci/node
  node: circleci/node@4.1

version: 2

jobs:
  validate:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform validate
          command: |
            cd infra
            terraform init -input=false
            terraform validate
      - persist_to_workspace:
          root: .
          paths:
            - .

  plan-apply:
    working_directory: /tmp/project
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - checkout
      - run:
          name: terraform init & plan
          command: |
            cd infra
            terraform init -input=false
            terraform plan -out tfapply
      - persist_to_workspace:
          root: .
          paths:
            - .

  apply:
    docker:
      - image: docker.mirror.hashicorp.services/hashicorp/terraform:light
    steps:
      - attach_workspace:
          at: .
      - run:
          name: terraform
          command: |
            cd infra
            terraform apply -auto-approve "tfapply"
      - persist_to_workspace:
          root: .
          paths:
            - .
  
  test:
    docker:
      - image: cimg/node:15.1
    steps:
      - checkout
      - run:
          name: Unit test
          command: cd app && npm i && npm test

workflows:
  version: 2
  deploy_infra:
    jobs:
      - validate
      - plan-apply:
          requires:
            - validate
      - hold-apply:
          type: approval
          requires:
            - plan-apply
      - apply:
          requires:
            - hold-apply

  deploy_service:
    jobs:
      - test